/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication23;

/**
 *
 * @author hakan
 */

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class Netflixdb extends javax.swing.JFrame {

    /**
     * Creates new form Netflixdb
     */
    
    private static final String username = "root";
    private static final String url = "jdbc:mysql://localhost:3306/sys?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Europe/Moscow";
    private static final String password = "";
    
    Connection conn = null;
    
    Date date = null;
    
    private static int program_id ;
    private static int which_episode;
    private static int type_id;
    
    private static boolean exist ;
    private static boolean is_series;
    
    private static String selected_item ;
    private static final String series = "series";
    
    public Netflixdb() {
        initComponents();
        update_Combo();
        update_program_species_table();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        Documentary = new javax.swing.JComboBox<>();
        ScienceFiction = new javax.swing.JComboBox<>();
        Fantastic = new javax.swing.JComboBox<>();
        ScienceandNature = new javax.swing.JComboBox<>();
        ChildandFamily = new javax.swing.JComboBox<>();
        Drama = new javax.swing.JComboBox<>();
        Thriller = new javax.swing.JComboBox<>();
        Comedy = new javax.swing.JComboBox<>();
        Horror = new javax.swing.JComboBox<>();
        Romance = new javax.swing.JComboBox<>();
        RealityProgram = new javax.swing.JComboBox<>();
        Anime = new javax.swing.JComboBox<>();
        Action = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Action");

        jLabel2.setText("Documentary");

        jLabel3.setText("Science Fiction");

        jLabel4.setText("Fantastic");

        jLabel5.setText("Science and Nature");

        jLabel6.setText("Child and Family");

        jLabel7.setText("Drama");

        jLabel8.setText("Thriller");

        jLabel9.setText("Comedy");

        jLabel10.setText("Horror");

        jLabel11.setText("Romance");

        jLabel12.setText("Anime");

        jLabel13.setText("Reality Program");

        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        Documentary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocumentaryActionPerformed(evt);
            }
        });

        ScienceFiction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScienceFictionActionPerformed(evt);
            }
        });

        Fantastic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FantasticActionPerformed(evt);
            }
        });

        ScienceandNature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScienceandNatureActionPerformed(evt);
            }
        });

        ChildandFamily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChildandFamilyActionPerformed(evt);
            }
        });

        Drama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DramaActionPerformed(evt);
            }
        });

        Thriller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThrillerActionPerformed(evt);
            }
        });

        Comedy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComedyActionPerformed(evt);
            }
        });

        Horror.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HorrorActionPerformed(evt);
            }
        });

        Romance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RomanceActionPerformed(evt);
            }
        });

        RealityProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RealityProgramActionPerformed(evt);
            }
        });

        Anime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnimeActionPerformed(evt);
            }
        });

        Action.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionActionPerformed(evt);
            }
        });

        jButton2.setText("PLAY");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ChildandFamily, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ScienceFiction, 0, 175, Short.MAX_VALUE)
                                .addComponent(Fantastic, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ScienceandNature, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(236, 236, 236)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Drama, 0, 175, Short.MAX_VALUE)
                                    .addComponent(Thriller, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Comedy, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Horror, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 322, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Romance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RealityProgram, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Anime, 0, 175, Short.MAX_VALUE)
                                    .addComponent(Action, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(229, 229, 229))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(Documentary, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(379, 379, 379)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jButton2)))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Documentary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Drama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Romance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScienceFiction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Thriller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RealityProgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Fantastic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Comedy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Anime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScienceandNature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Horror, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Action, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ChildandFamily, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //getting data from program table and adding name by name into combobox
    private void update_Combo(){
        try {
            conn=DriverManager.getConnection(url, username, password);
            
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery("select*from program_table");
            
            while(myresult.next()){
                if(myresult.getString("program_type").contains("Documentary")){
                    Documentary.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Science Fiction")){
                    ScienceFiction.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Fantastic")){
                    Fantastic.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Science and Nature")){
                    ScienceandNature.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Child and Family")){
                    ChildandFamily.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Drama")){
                    Drama.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Thriller")){
                    Thriller.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Comedy")){
                    Comedy.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Horror")){
                    Horror.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Romance")){
                    Romance.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Reality Program")){
                    RealityProgram.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Anime")){
                    Anime.addItem(myresult.getString("program_name"));
                }
                if(myresult.getString("program_type").contains("Action")){
                    Action.addItem(myresult.getString("program_name"));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Netflixdb.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //update program species tables column from type_table
    private void update_program_species_table(){
        try{
            conn = DriverManager.getConnection(url, username, password);
            
            Statement state = conn.createStatement();
            Statement state2 = conn.createStatement();
            String query = "select* from program_table";
            ResultSet result = state.executeQuery(query);
            
            int program_type_id;
            int species_id ;
            String program_type;
            
            while(result.next()){
                program_type_id = result.getInt("program_id");
                program_type = result.getString("program_type");
                String query2 = "select * from type_table where type_name='" + program_type + "'";
                
                ResultSet result2 = state2.executeQuery(query2);
                
                while(result2.next()){
                    species_id = result2.getInt("type_id");
                    
                    String sql = "INSERT INTO program_type_table (program_id,species_id)" +
                    "VALUES (?,?)";
            
                    PreparedStatement preparedStatement = conn.prepareStatement(sql);
            
                    preparedStatement.setInt(1, program_type_id);
                    preparedStatement.setInt(2, species_id);
            
                    preparedStatement.executeUpdate();
                }
            }
                
                
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String search = jTextField1.getText();
        
        try{
            conn = DriverManager.getConnection(url, username, password);
            
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery("select*from program_table");
            
            //searching film/series in program table. if exist return JOptionPane
            while(myresult.next()){
                String program_name = myresult.getString("program_name");
                if(search.equals(program_name)){
                    System.out.println("matches!");
                    JOptionPane.showMessageDialog(null, "This section:" + myresult.getString("program_type"), "InfoBox: " + "message ", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            
        }catch(SQLException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    //checking combobox action performed.
    //if anything is selected then adding data into user program table
    private void DocumentaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocumentaryActionPerformed
        // TODO add your handling code here:
        selected_item = Documentary.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_DocumentaryActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            conn = DriverManager.getConnection(url, username, password);
            
            Statement state = conn.createStatement();
            Statement state2 = conn.createStatement();
            Statement state3 = conn.createStatement();
            Statement state4 = conn.createStatement();
            
            String query = "select * from user_program_table where program_id = '" + program_id + "'";
            String query2 = "select * from program_table where program_id='" + program_id + "'";
            String query4 = "select * from program_table where program_id='" + program_id + "'";
            
            ResultSet myresult = state.executeQuery(query);
            ResultSet myresult2 = state2.executeQuery(query2);
            ResultSet myresult4 = state4.executeQuery(query4);
            
            String species ="";
            
            //selecting program species to use is_series or not . 
            //if it is series return true and increment which_episode to use where the user's last enter
            while(myresult4.next()){
                species = myresult4.getString("program_species");
            }
            
            if(species.equals(series)){
                is_series = true;
            }
            
            String type_name="";
            
            while(myresult2.next()){
                type_name=myresult2.getString("program_type");
            }
            
            String query3 = "select * from type_table where type_name='" +type_name+"'";
            
            ResultSet myresult3 = state3.executeQuery(query3);
            
            while(myresult3.next()){
                type_id=myresult3.getInt("type_id");
            }
            while(myresult.next()){
                which_episode = myresult.getInt("which_episode");
                if(is_series){
                    which_episode ++;
                }
                JOptionPane.showMessageDialog(null, "The episode " + which_episode + " is playing", "InfoBox: " + "message ", JOptionPane.INFORMATION_MESSAGE);
                exist = true;
            }
            
            //if database has series then decide where the user has stayed
            //and updating data
            if(exist){
                //exist and update
                String sql = "UPDATE user_program_table SET which_episode='" + which_episode +"' WHERE program_id='" + program_id +"'";
                PreparedStatement preparedStatement = conn.prepareStatement(sql);
                
                preparedStatement.executeUpdate();
            }else{
            String sql = "INSERT INTO user_program_table (user_id,program_id,type_id, watch_date, watch_length , which_episode,user_rate)" +
            "VALUES (?,?,?,?,?,?,?)";
                 
            java.sql.Timestamp sql_date = new java.sql.Timestamp(new java.util.Date().getTime());
            
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            
            preparedStatement.setInt(1, NewJFrame.user_id);
            preparedStatement.setInt(2, program_id);
            preparedStatement.setInt(3, type_id);
            preparedStatement.setTimestamp(4, sql_date);
            preparedStatement.setInt(5, 45);
            preparedStatement.setInt(6, 1);
            preparedStatement.setInt(7, 5);
            
            preparedStatement.executeUpdate(); 
            }
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ScienceFictionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScienceFictionActionPerformed
        // TODO add your handling code here:
        selected_item = ScienceFiction.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_ScienceFictionActionPerformed

    private void FantasticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FantasticActionPerformed
        // TODO add your handling code here:
        selected_item = Fantastic.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_FantasticActionPerformed

    private void ScienceandNatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScienceandNatureActionPerformed
        // TODO add your handling code here:
        selected_item = ScienceandNature.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_ScienceandNatureActionPerformed

    private void ChildandFamilyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChildandFamilyActionPerformed
        // TODO add your handling code here:
        selected_item = ChildandFamily.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_ChildandFamilyActionPerformed

    private void DramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DramaActionPerformed
        // TODO add your handling code here:
        selected_item = Drama.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_DramaActionPerformed

    private void ThrillerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThrillerActionPerformed
        // TODO add your handling code here:
        selected_item = Thriller.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_ThrillerActionPerformed

    private void ComedyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComedyActionPerformed
        // TODO add your handling code here:
        selected_item = Comedy.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_ComedyActionPerformed

    private void HorrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HorrorActionPerformed
        // TODO add your handling code here:
        selected_item = Horror.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_HorrorActionPerformed

    private void RomanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RomanceActionPerformed
        // TODO add your handling code here:
        selected_item = Romance.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_RomanceActionPerformed

    private void RealityProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RealityProgramActionPerformed
        // TODO add your handling code here:
        selected_item = RealityProgram.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_RealityProgramActionPerformed

    private void AnimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnimeActionPerformed
        // TODO add your handling code here:
        selected_item = Anime.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_AnimeActionPerformed

    private void ActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActionActionPerformed
        // TODO add your handling code here:
        selected_item = Action.getSelectedItem().toString();
        
        try{
            String query = "select program_id from program_table where program_name = '" + selected_item + "'";
                
            Statement state = conn.createStatement();
            
            ResultSet myresult = state.executeQuery(query);
            
            while(myresult.next()){
                program_id = myresult.getInt("program_id");
            }
            
            
        }catch(SQLException ex){
            System.out.println(ex);
        }
    }//GEN-LAST:event_ActionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Netflixdb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Netflixdb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Netflixdb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Netflixdb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Netflixdb().setVisible(true);
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Action;
    private javax.swing.JComboBox<String> Anime;
    private javax.swing.JComboBox<String> ChildandFamily;
    private javax.swing.JComboBox<String> Comedy;
    private javax.swing.JComboBox<String> Documentary;
    private javax.swing.JComboBox<String> Drama;
    private javax.swing.JComboBox<String> Fantastic;
    private javax.swing.JComboBox<String> Horror;
    private javax.swing.JComboBox<String> RealityProgram;
    private javax.swing.JComboBox<String> Romance;
    private javax.swing.JComboBox<String> ScienceFiction;
    private javax.swing.JComboBox<String> ScienceandNature;
    private javax.swing.JComboBox<String> Thriller;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}